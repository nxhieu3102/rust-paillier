[package]
name = "kzen-paillier"
version = "0.4.3"
edition = "2018"
description = "Efficient pure-Rust library for the Paillier partially homomorphic encryption scheme"
license = "MIT OR Apache-2.0"
repository = "https://github.com/nxhieu3102/rust-paillier"
categories = ["cryptography", "algorithms"]
keywords = ["paillier", "homomorphic", "encryption", "zero-knowledge", "cryptoagorithms"]


[dependencies]
redis = "0.29.5"
rayon = "1.1"
serde = { version = "1.0", features = ["derive"] }
curv-kzen = { git = "https://github.com/nxhieu3102/curv-kzen"}
serde_json = "1.0"
once_cell = "1.14"
bincode = "1.3.3"
getrandom = { version = "0.2", features = ["js", "js-sys"] }
rand = { version = "0.8.5", features = ["std"] }
rand_core = { version = "0.6.4", default-features = false, features = ["std"] }
rust-gmp = { git = "https://github.com/nxhieu3102/rust-gmp" }
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
serde-wasm-bindgen = "0.4"
console_error_panic_hook = "0.1"
instant = "0.1.2"
rug = "1.27.0"
thiserror = "1"

#[replace]
#"getrandom:0.1.16" = { git = "https://github.com/rust-lang/crates.io-index#getrandom@0.2.15", features = ["js", "js-sys"] }

[dev-dependencies]
bencher = "0.1"
serde_json = "1.0"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["curv-kzen/rust-gmp"]
#
#[dependencies.web-sys]
#features = [
# 'console',
# 'Document',
# 'HtmlElement',
# 'HtmlInputElement',
# 'MessageEvent',
# 'Window',
# 'Worker',
#]

######### Paillier

# benchmark
#[[bench]]
#name = "arith"
#harness = false
#path = "benches/paillier/arith.rs"
#
#[[bench]]
#name = "encryption"
#harness = false
#path = "benches/paillier/encryption.rs"
#
#[[bench]]
#name = "keygen"
#harness = false
#path = "benches/paillier/keygen.rs"
#
#[[bench]]
#name = "keygen_optimized"
#harness = false
#path = "benches/optimized_paillier/keygen.rs"
#

[[bench]]
name = "encryption_optimized"
harness = false
path = "benches/optimized_paillier/encryption.rs"


[[bench]]
name = "encryption_precomputed"
harness = false
path = "benches/optimized_paillier/encryption_precompute.rs"
#
#
#[[bench]]
#name = "encryption"
#harness = false
#path = "benches/paillier/encryption.rs"

#[[bench]]
#name = "proof"
#harness = false
#path = "benches/paillier/proof.rs"

# examples
[[example]]
name = "basic"
path = "examples/paillier/basic.rs"

[[example]]
name = "core"
path = "examples/paillier/core.rs"

[[example]]
name = "packed"
path = "examples/paillier/packed.rs"

[[example]]
name = "simple-voting"
path = "examples/paillier/simple-voting.rs"


[profile.release]
strip = true

# ######### Optimized Paillier 

# # benchmark
# [[bench]]
# name = "optimized-arith"
# harness = false
# path = "benches/optimized_paillier/arith.rs"

# [[bench]]
# name = "optimized-encryption"
# harness = false
# path = "benches/optimized_paillier/encryption.rs"

# [[bench]]
# name = "optimized-keygen"
# harness = false
# path = "benches/optimized_paillier/keygen.rs"

# [[bench]]
# name = "optimized-proof"
# harness = false
# path = "benches/optimized_paillier/proof.rs"

# examples
[[example]]
name = "optimized-basic"
path = "examples/optimized_paillier/basic.rs"

[[example]]
name = "optimized-core"
path = "examples/optimized_paillier/core.rs"

[[example]]
name = "optimized-test"
path = "examples/optimized_paillier/test.rs"


 [[example]]
 name = "test-redis"
 path = "examples/optimized_paillier/test_produce_redis.rs"

[[example]]
name = "server-redis"
path = "examples/optimized_paillier/server.rs"

[[example]]
name = "client-redis"
path = "examples/optimized_paillier/client.rs"

# [[example]]
# name = "optimized-packed"
# path = "examples/optimized_paillier/packed.rs"

# [[example]]
# name = "optimized-simple-voting"
# path = "examples/optimized_paillier/simple-voting.rs"
